openapi: 3.0.3
info:
  title: DotAAS Part 2 | HTTP/REST | Entire API Collection
  description: The entire API collection as part of Details of the Asset Administration Shell Part 2
  version: V1.0RC03
paths:
  /shells:
    get:
      tags:
        - aas_repository
        - aas_repository_read
      summary: Returns all Asset Administration Shells
      operationId: GetAllAssetAdministrationShells
      parameters:
        - name: assetIds
          in: query
          description: A list of specific Asset identifiers
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              $ref: '#/components/SpecificAssetId'
        - name: idShort
          in: query
          description: The Asset Administration Shell’s IdShort
          required: false
          style: form
          explode: true
          schema:
            type: string
      responses:
        '200':
          description: Requested Asset Administration Shells
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AssetAdministrationShell'
        default:
          description: Default error handling for unmentioned status codes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
    post:
      tags:
        - aas_repository
      summary: Creates a new Asset Administration Shell
      operationId: PostAssetAdministrationShell
      x-semanticIds:
        - https://admin-shell.io/aas/API/PostAssetAdministrationShell/1/0/RC03
      requestBody:
        description: Asset Administration Shell object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssetAdministrationShell'
        required: true
      responses:
        '201':
          description: Asset Administration Shell created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetAdministrationShell'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
        default:
          description: Default error handling for unmentioned status codes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'  
  /shells/{aasIdentifier}:
    get:
      tags:
        - aas_repository
        - aas_repository_read
      summary: Returns a specific Asset Administration Shell
      operationId: GetAssetAdministrationShellById
      x-semanticIds:
        - https://admin-shell.io/aas/API/GetAssetAdministrationShellById/1/0/RC03
      parameters:
        - name: aasIdentifier
          in: path
          description: The Asset Administration Shell’s unique id (UTF8-BASE64-URL-encoded)
          required: true
          style: simple
          explode: false
          schema:
            type: string
            format: byte
      responses:
        '200':
          description: Requested Asset Administration Shell
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetAdministrationShell'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'      
        default:
          description: Default error handling for unmentioned status codes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'  
    put:
      tags:
        - aas_repository
      summary: Updates an existing Asset Administration Shell
      operationId: PutAssetAdministrationShellById
      x-semanticIds:
        - https://admin-shell.io/aas/API/PutAssetAdministrationShellById/1/0/RC03
      parameters:
        - name: aasIdentifier
          in: path
          description: The Asset Administration Shell’s unique id (UTF8-BASE64-URL-encoded)
          required: true
          style: simple
          explode: false
          schema:
            type: string
            format: byte
      requestBody:
        description: Asset Administration Shell object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssetAdministrationShell'
        required: true
      responses:
        '204':
          description: Asset Administration Shell updated successfully
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'      
        default:
          description: Default error handling for unmentioned status codes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'  
    delete:
      tags:
        - aas_repository
      summary: Deletes an Asset Administration Shell
      operationId: DeleteAssetAdministrationShellById
      x-semanticIds:
        - https://admin-shell.io/aas/API/DeleteAssetAdministrationShellById/1/0/RC03
      parameters:
        - name: aasIdentifier
          in: path
          description: The Asset Administration Shell’s unique id (UTF8-BASE64-URL-encoded)
          required: true
          style: simple
          explode: false
          schema:
            type: string
            format: byte
      responses:
        '204':
          description: Asset Administration Shell deleted successfully
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'      
        default:
          description: Default error handling for unmentioned status codes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
  /aas:
    get:
      tags:
        - aas
        - aas_read
      summary: Returns the Asset Administration Shell
      operationId: GetAssetAdministrationShell
      x-semanticIds:
        - https://admin-shell.io/aas/API/GetAssetAdministrationShell/1/0/RC03
      parameters:
        - $ref: '#/components/parameters/Content'
      responses:
        '200':
          description: Requested Asset Administration Shell
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetAdministrationShell'
        default:
          description: Default error handling for unmentioned status codes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
    put:
      tags:
        - aas
      summary: Updates the Asset Administration Shell
      operationId: PutAssetAdministrationShell
      x-semanticIds:
        - https://admin-shell.io/aas/API/PutAssetAdministrationShell/1/0/RC03
      parameters:
        - $ref: '#/components/parameters/Content'
      requestBody:
        description: Asset Administration Shell object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssetAdministrationShell'
        required: true
      responses:
        '204':
          description: Asset Administration Shell updated successfully
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
        default:
          description: Default error handling for unmentioned status codes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result' 
  /aas/asset-information:
    get:
      tags:
        - aas
        - aas_read
      summary: Returns the Asset Information
      operationId: GetAssetInformation
      x-semanticIds:
        - https://admin-shell.io/aas/API/GetAssetInformation/1/0/RC03
      responses:
        '200':
          description: Requested Asset Information
          content:
            application/json:
              schema:
                $ref: '#/components/AssetInformation'
        default:
          description: Default error handling for unmentioned status codes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
    put:
      tags:
        - aas
      summary: Updates the Asset Information
      operationId: PutAssetInformation
      x-semanticIds:
        - https://admin-shell.io/aas/API/PutAssetInformation/1/0/RC03
      requestBody:
        description: Asset Information object
        content:
          application/json:
            schema:
              $ref: '#/components/AssetInformation'
        required: true
      responses:
        '204':
          description: Asset Information updated successfully
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
        default:
          description: Default error handling for unmentioned status codes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result' 
  /aas/submodels:
    get:
      tags:
        - aas
        - aas_read
      summary: Returns all submodel references
      operationId: GetAllSubmodelReferences
      x-semanticIds:
        - https://admin-shell.io/aas/API/GetAllSubmodelReferences/1/0/RC03
      responses:
        '200':
          description: Requested submodel references
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/Reference'
        default:
          description: Default error handling for unmentioned status codes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
    post:
      tags:
        - aas
      summary: Creates a submodel reference at the Asset Administration Shell
      operationId: PostSubmodelReference
      x-semanticIds:
        - https://admin-shell.io/aas/API/PostSubmodelReference/1/0/RC03
      requestBody:
        description: Reference to the Submodel
        content:
          application/json:
            schema:
              $ref: '#/components/Reference'
        required: true
      responses:
        '201':
          description: Submodel reference created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/Reference'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
        default:
          description: Default error handling for unmentioned status codes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
  /aas/submodels/{submodelIdentifier}:
    delete:
      tags:
        - aas
      summary: Deletes the submodel reference from the Asset Administration Shell
      operationId: DeleteSubmodelReferenceById
      x-semanticIds:
        - https://admin-shell.io/aas/API/DeleteSubmodelReference/1/0/RC03
      parameters:
        - name: submodelIdentifier
          in: path
          description: The Submodel’s unique id (UTF8-BASE64-URL-encoded)
          required: true
          style: simple
          explode: false
          schema:
            type: string
            format: byte
      responses:
        '204':
          description: Submodel reference deleted successfully
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'      
        default:
          description: Default error handling for unmentioned status codes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
  /submodels:
    get:
      tags:
        - submodel_repository
        - submodel_repository_read
      summary: Returns all Submodels
      operationId: GetAllSubmodels
      x-semanticIds:
        - https://admin-shell.io/aas/API/GetAllSubmodels/1/0/RC03
        - https://admin-shell.io/aas/API/GetAllSubmodelsBySemanticId/1/0/RC03
        - https://admin-shell.io/aas/API/GetAllSubmodelsByIdShort/1/0/RC03
      parameters:
        - $ref: '#/components/parameters/SemanticId'
        - name: idShort
          in: query
          description: The Submodel’s idShort
          required: false
          style: form
          explode: true
          schema:
            type: string
      responses:
        '200':
          description: Requested Submodels
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/Submodel'
        default:
          description: Default error handling for unmentioned status codes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
    post:
      tags:
        - submodel_repository
      summary: Creates a new Submodel
      operationId: PostSubmodel
      x-semanticIds:
        - https://admin-shell.io/aas/API/PostSubmodel/1/0/RC03
      requestBody:
        description: Submodel object
        content:
          application/json:
            schema:
              $ref: '#/components/Submodel'
        required: true
      responses:
        '201':
          description: Submodel created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/Submodel'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
        default:
          description: Default error handling for unmentioned status codes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
  /submodels/{submodelIdentifier}:
    get:
      tags:
        - submodel_repository
        - submodel_repository_read
      summary: Returns a specific Submodel
      operationId: GetSubmodelById
      x-semanticIds:
        - https://admin-shell.io/aas/API/GetSubmodelById/1/0/RC03
      parameters:
        - name: submodelIdentifier
          in: path
          description: The Submodel’s unique id (UTF8-BASE64-URL-encoded)
          required: true
          style: simple
          explode: false
          schema:
            type: string
            format: byte
      responses:
        '200':
          description: Requested Submodel
          content:
            application/json:
              schema:
                $ref: '#/components/Submodel'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
        default:
          description: Default error handling for unmentioned status codes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
    put:
      tags:
        - submodel_repository
      summary: Updates an existing Submodel
      operationId: PutSubmodelById
      x-semanticIds:
        - https://admin-shell.io/aas/API/PutSubmodelById/1/0/RC03
      parameters:
        - name: submodelIdentifier
          in: path
          description: The Submodel’s unique id (UTF8-BASE64-URL-encoded)
          required: true
          style: simple
          explode: false
          schema:
            type: string
            format: byte
      requestBody:
        description: Submodel object
        content:
          application/json:
            schema:
              $ref: '#/components/Submodel'
        required: true
      responses:
        '204':
          description: Submodel updated successfully
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'      
        default:
          description: Default error handling for unmentioned status codes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result' 
    delete:
      tags:
        - submodel_repository
      summary: Deletes a Submodel
      operationId: DeleteSubmodelById
      x-semanticIds:
        - https://admin-shell.io/aas/API/DeleteSubmodelById/1/0/RC03
      parameters:
        - name: submodelIdentifier
          in: path
          description: The Submodel’s unique id (UTF8-BASE64-URL-encoded)
          required: true
          style: simple
          explode: false
          schema:
            type: string
            format: byte
      responses:
        '204':
          description: Submodel deleted successfully
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'      
        default:
          description: Default error handling for unmentioned status codes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
  /submodel:
    get:
      tags:
        - submodel
        - submodel_read
      summary: Returns the Submodel
      operationId: GetSubmodel
      x-semanticIds:
        - https://admin-shell.io/aas/API/GetSubmodel/1/0/RC03
      parameters:
        - $ref: '#/components/parameters/Level'
        - $ref: '#/components/parameters/Content'
        - $ref: '#/components/parameters/Extent'
      responses:
        '200':
          description: Requested Submodel
          content:
            application/json:
              schema:
                $ref: '#/components/Submodel'
        default:
          description: Default error handling for unmentioned status codes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
    put:
      tags:
        - submodel
      summary: Updates the Submodel
      operationId: PutSubmodel
      x-semanticIds:
        - https://admin-shell.io/aas/API/PutSubmodel/1/0/RC03
      parameters:
        - $ref: '#/components/parameters/Level'
        - $ref: '#/components/parameters/Content'
        - $ref: '#/components/parameters/Extent'
      requestBody:
        description: Submodel object
        content:
          application/json:
            schema:
              $ref: '#/components/Submodel'
        required: true
      responses:
        '204':
          description: Submodel updated successfully
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
        default:
          description: Default error handling for unmentioned status codes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result' 
  /submodel/submodel-elements:
    get:
      tags:
        - submodel
        - submodel_read
      summary: Returns all submodel elements including their hierarchy
      operationId: GetAllSubmodelElements
      x-semanticIds:
        - https://admin-shell.io/aas/API/GetAllSubmodelElements/1/0/RC03
        - https://admin-shell.io/aas/API/GetAllSubmodelElementsBySemanticId/1/0/RC03
        - https://admin-shell.io/aas/API/GetAllSubmodelElementsByParentPathAndSemanticId/1/0/RC03
      parameters:
        - $ref: '#/components/parameters/Level'
        - $ref: '#/components/parameters/Content'
        - $ref: '#/components/parameters/Extent'
      responses:
        '200':
          description: List of found submodel elements
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/SubmodelElement'
        default:
          description: Default error handling for unmentioned status codes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
    post:
      tags:
        - submodel
      summary: Creates a new submodel element
      operationId: PostSubmodelElement
      x-semanticIds:
        - https://admin-shell.io/aas/API/PostSubmodelElement/1/0/RC03c
      parameters:
        - $ref: '#/components/parameters/Level'
        - $ref: '#/components/parameters/Content'
        - $ref: '#/components/parameters/Extent'
      requestBody:
        description: Requested submodel element
        content:
          application/json:
            schema:
              $ref: '#/components/SubmodelElement'
        required: true
      responses:
        '201':
          description: Submodel element created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/SubmodelElement'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
        default:
          description: Default error handling for unmentioned status codes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
  /submodel/submodel-elements/{idShortPath}:
    get:
      tags:
        - submodel
        - submodel_read
      summary: Returns a specific submodel element from the Submodel at a specified
        path
      operationId: GetSubmodelElementByPath
      x-semanticIds:
        - https://admin-shell.io/aas/API/GetSubmodelElementByPath/1/0/RC03
      parameters:
        - $ref: '#/components/parameters/Level'
        - $ref: '#/components/parameters/Content'
        - $ref: '#/components/parameters/Extent'
        - name: idShortPath
          in: path
          description: IdShort path to the submodel element (dot-separated)
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        '200':
          description: Requested submodel element
          content:
            application/json:
              schema:
                $ref: '#/components/SubmodelElement'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
        default:
          description: Default error handling for unmentioned status codes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
    post:
      tags:
        - submodel
      summary: Creates a new submodel element at a specified path within submodel elements hierarchy
      operationId: PostSubmodelElementByPath
      x-semanticIds:
        - https://admin-shell.io/aas/API/PostSubmodelElementByPath/1/0/RC03c
      parameters:
        - $ref: '#/components/parameters/Level'
        - $ref: '#/components/parameters/Content'
        - $ref: '#/components/parameters/Extent'
        - name: idShortPath
          in: path
          description: IdShort path to the submodel element (dot-separated)
          required: true
          style: simple
          explode: false
          schema:
            type: string
      requestBody:
        description: Requested submodel element
        content:
          application/json:
            schema:
              $ref: '#/components/SubmodelElement'
        required: true
      responses:
        '201':
          description: Submodel element created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/SubmodelElement'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
        default:
          description: Default error handling for unmentioned status codes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
    put:
      tags:
        - submodel
      summary: Updates an existing submodel element at a specified path within submodel elements hierarchy
      operationId: PutSubmodelElementByPath
      x-semanticIds:
        - https://admin-shell.io/aas/API/PutSubmodelElementByPath/1/0/RC03
        - https://admin-shell.io/aas/API/SetSubmodelElementValueByPath/1/0/RC03
      parameters:
        - $ref: '#/components/parameters/Level'
        - $ref: '#/components/parameters/Content'
        - $ref: '#/components/parameters/Extent'
        - name: idShortPath
          in: path
          description: IdShort path to the submodel element (dot-separated)
          required: true
          style: simple
          explode: false
          schema:
            type: string
      requestBody:
        description: Requested submodel element
        content:
          application/json:
            schema:
              $ref: '#/components/SubmodelElement'
        required: true
      responses:
        '204':
          description: Submodel element updated successfully
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'      
        default:
          description: Default error handling for unmentioned status codes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result' 
    delete:
      tags:
        - submodel
      summary: Deletes a submodel element at a specified path within the submodel elements hierarchy
      operationId: DeleteSubmodelElementByPath
      x-semanticIds:
        - https://admin-shell.io/aas/API/DeleteSubmodelElementByPath/1/0/RC03
      parameters:
        - name: idShortPath
          in: path
          description: IdShort path to the submodel element (dot-separated)
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        '204':
          description: Submodel element deleted successfully
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'      
        default:
          description: Default error handling for unmentioned status codes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
  /submodel/submodel-elements/{idShortPath}/attachment:
    get:
      tags:
        - submodel
        - submodel_read
      summary: Downloads file content from a specific submodel element from the Submodel at a specified path
      operationId: GetFileByPath
      x-semanticIds:
        - https://admin-shell.io/aas/API/GetFileByPath/1/0/RC03
      parameters:
        - name: idShortPath
          in: path
          description: IdShort path to the submodel element (dot-separated)
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        '200':
          description: Requested file
          headers:
            Content-Disposition:
              schema:
                type: string
              description: In order to physically download the file usually set to attachment with a filename
              example: 'attachment; filename="filename.jpg"'   
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
        '405':
          description: Method not allowed - Download only valid for File submodel element
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
        default:
          description: Default error handling for unmentioned status codes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
    put:
      tags:
        - submodel
      summary: Uploads file content to an existing submodel element at a specified path within submodel elements hierarchy
      operationId: PutFileByPath
      x-semanticIds:
        - https://admin-shell.io/aas/API/PutFileByPath/1/0/RC03
      parameters:
        - name: idShortPath
          in: path
          description: IdShort path to the submodel element (dot-separated)
          required: true
          style: simple
          explode: false
          schema:
            type: string
      requestBody:
        description: File to upload
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                fileName:
                  type: string
                file:
                  type: string
                  format: binary
            encoding:
              file:
                contentType: application/octet-stream
        required: true
      responses:
        '204':
          description: Submodel element updated successfully
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result' 
        '405':
          description: Method not allowed - Upload only valid for File submodel element
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
        default:
          description: Default error handling for unmentioned status codes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result' 
  /submodel/submodel-elements/{idShortPath}/invoke:
    post:
      tags:
        - submodel
      summary: Synchronously or asynchronously invokes an Operation at a specified path
      operationId: InvokeOperation
      x-semanticIds:
        - https://admin-shell.io/aas/API/InvokeOperationSync/1/0/RC03
        - https://admin-shell.io/aas/API/InvokeOperationAsync/1/0/RC03
      parameters:
        - name: async
          in: query
          description: Determines whether an operation invocation is performed asynchronously or synchronously
          schema:
            type: boolean
            default: false
        - $ref: '#/components/parameters/Content'
        - name: idShortPath
          in: path
          description: IdShort path to the submodel element (dot-separated), in this case an operation
          required: true
          style: simple
          explode: false
          schema:
            type: string
      requestBody:
        description: Operation request object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OperationRequest'
        required: true
      responses:
        '200':
          description: Operation result object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationResult'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
        '405':
          description: Method not allowed - Invoke only valid for Operation submodel element
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
        default:
          description: Default error handling for unmentioned status codes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
  /submodel/submodel-elements/{idShortPath}/operation-results/{handleId}:
    get:
      tags:
        - submodel
        - submodel_read
      summary: Returns the Operation result of an asynchronous invoked Operation
      operationId: GetOperationAsyncResult
      x-semanticIds:
        - https://admin-shell.io/aas/API/GetOperationAsyncResult/1/0/RC03
      parameters:
        - name: content
          in: query
          schema:
            type: string
            default: normal
            enum:
              - normal
              - value
        - name: idShortPath
          in: path
          description: IdShort path to the submodel element (dot-separated), in this case an operation
          required: true
          style: simple
          explode: false
          schema:
            type: string
        - name: handleId
          in: path
          description:  The returned handle id of an operation’s asynchronous invocation used to request the current state of the operation’s execution (UTF8-BASE64-URL-encoded)
          required: true
          style: simple
          explode: false
          schema:
            type: string
            format: byte
      responses:
        '200':
          description: Operation result object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationResult'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
        default:
          description: Default error handling for unmentioned status codes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
  /shell-descriptors:
    get:
      tags:
        - aas_registry
        - aas_registry_read
      summary: Returns all Asset Administration Shell Descriptors
      operationId: GetAllAssetAdministrationShellDescriptors
      x-semanticIds:
        - https://admin-shell.io/aas/API/GetAllAssetAdministrationShellDescriptors/1/0/RC03
      responses:
        '200':
          description: Requested Asset Administration Shell Descriptors
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AssetAdministrationShellDescriptor'
        default:
          description: Default error handling for unmentioned status codes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
    post:
      tags:
        - aas_registry
        - aas_registry_read
      summary: Creates a new Asset Administration Shell Descriptor, i.e. registers an AAS
      operationId: PostAssetAdministrationShellDescriptor
      x-semanticIds:
        - https://admin-shell.io/aas/API/PostAssetAdministrationShellDescriptor/1/0/RC03
      requestBody:
        description: Asset Administration Shell Descriptor object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssetAdministrationShellDescriptor'
        required: true
      responses:
        '201':
          description: Asset Administration Shell Descriptor created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetAdministrationShellDescriptor'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
        default:
          description: Default error handling for unmentioned status codes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
  /shell-descriptors/{aasIdentifier}:
    get:
      tags:
        - aas_registry
        - aas_registry_read
      summary: Returns a specific Asset Administration Shell Descriptor
      operationId: GetAssetAdministrationShellDescriptorById
      x-semanticIds:
        - https://admin-shell.io/aas/API/GetAssetAdministrationShellDescriptorById/1/0/RC03
      parameters:
        - name: aasIdentifier
          in: path
          description: The Asset Administration Shell’s unique id (UTF8-BASE64-URL-encoded)
          required: true
          style: simple
          explode: false
          schema:
            type: string
            format: byte
      responses:
        '200':
          description: Requested Asset Administration Shell Descriptor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetAdministrationShellDescriptor'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
        default:
          description: Default error handling for unmentioned status codes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
    put:
      tags:
        - aas_registry
      summary: Updates an existing Asset Administration Shell Descriptor
      operationId: PutAssetAdministrationShellDescriptorById
      x-semanticIds:
        - https://admin-shell.io/aas/API/PutAssetAdministrationShellDescriptorById/1/0/RC03
      parameters:
        - name: aasIdentifier
          in: path
          description: The Asset Administration Shell’s unique id (UTF8-BASE64-URL-encoded)
          required: true
          style: simple
          explode: false
          schema:
            type: string
            format: byte
      requestBody:
        description: Asset Administration Shell Descriptor object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssetAdministrationShellDescriptor'
        required: true
      responses:
        '204':
          description: Asset Administration Shell Descriptor updated successfully
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'      
        default:
          description: Default error handling for unmentioned status codes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result' 
    delete:
      tags:
        - aas_registry
      summary: Deletes an Asset Administration Shell Descriptor, i.e. de-registers an AAS
      operationId: DeleteAssetAdministrationShellDescriptorById
      x-semanticIds:
        - https://admin-shell.io/aas/API/DeleteAssetAdministrationShellDescriptorById/1/0/RC03
      parameters:
        - name: aasIdentifier
          in: path
          description: The Asset Administration Shell’s unique id (UTF8-BASE64-URL-encoded)
          required: true
          style: simple
          explode: false
          schema:
            type: string
            format: byte
      responses:
        '204':
          description: Asset Administration Shell Descriptor deleted successfully
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'      
        default:
          description: Default error handling for unmentioned status codes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
  /shell-descriptors/{aasIdentifier}/submodel-descriptors:
    get:
      tags:
        - aas_registry
        - aas_registry_read
      summary: Returns all Submodel Descriptors
      operationId: GetAllSubmodelDescriptors_AASRegistry
      x-semanticIds:
        - https://admin-shell.io/aas/API/GetAllSubmodelDescriptors/1/0/RC03
      parameters:
        - name: aasIdentifier
          in: path
          description: The Asset Administration Shell’s unique id (UTF8-BASE64-URL-encoded)
          required: true
          style: simple
          explode: false
          schema:
            type: string
            format: byte
      responses:
        '200':
          description: Requested Submodel Descriptors
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SubmodelDescriptor'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
        default:
          description: Default error handling for unmentioned status codes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
    post:
      tags:
        - aas_registry
      summary: Creates a new Submodel Descriptor, i.e. registers a submodel
      operationId: PostSubmodelDescriptor_AASRegistry
      x-semanticIds:
        - https://admin-shell.io/aas/API/PostSubmodelDescriptor/1/0/RC03
      parameters:
        - name: aasIdentifier
          in: path
          description: The Asset Administration Shell’s unique id (UTF8-BASE64-URL-encoded)
          required: true
          style: simple
          explode: false
          schema:
            type: string
            format: byte
      requestBody:
        description: Submodel Descriptor object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubmodelDescriptor'
        required: true
      responses:
        '201':
          description: Submodel Descriptor created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubmodelDescriptor'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
        default:
          description: Default error handling for unmentioned status codes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
  /shell-descriptors/{aasIdentifier}/submodel-descriptors/{submodelIdentifier}:
    get:
      tags:
        - aas_registry
        - aas_registry_read
      summary: Returns a specific Submodel Descriptor
      operationId: GetSubmodelDescriptorById_AASRegistry
      x-semanticIds:
        - https://admin-shell.io/aas/API/GetSubmodelDescriptorById/1/0/RC03
      parameters:
        - name: aasIdentifier
          in: path
          description: The Asset Administration Shell’s unique id (UTF8-BASE64-URL-encoded)
          required: true
          style: simple
          explode: false
          schema:
            type: string
        - name: submodelIdentifier
          in: path
          description: The Submodel’s unique id (UTF8-BASE64-URL-encoded)
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        '200':
          description: Requested Submodel Descriptor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubmodelDescriptor'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
        default:
          description: Default error handling for unmentioned status codes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
    put:
      tags:
        - aas_registry
      summary: Updates an existing Submodel Descriptor
      operationId: PutSubmodelDescriptorById_AASRegistry
      x-semanticIds:
        - https://admin-shell.io/aas/API/PutSubmodelDescriptorById/1/0/RC03
      parameters:
        - name: aasIdentifier
          in: path
          description: The Asset Administration Shell’s unique id (UTF8-BASE64-URL-encoded)
          required: true
          style: simple
          explode: false
          schema:
            type: string
        - name: submodelIdentifier
          in: path
          description: The Submodel’s unique id (UTF8-BASE64-URL-encoded)
          required: true
          style: simple
          explode: false
          schema:
            type: string
      requestBody:
        description: Submodel Descriptor object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubmodelDescriptor'
        required: true
      responses:
        '204':
          description: Submodel Descriptor updated successfully
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'      
        default:
          description: Default error handling for unmentioned status codes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result' 
    delete:
      tags:
        - aas_registry
      summary: Deletes a Submodel Descriptor, i.e. de-registers a submodel
      operationId: DeleteSubmodelDescriptorById_AASRegistry
      x-semanticIds:
        - https://admin-shell.io/aas/API/DeleteSubmodelDescriptorById/1/0/RC03
      parameters:
        - name: aasIdentifier
          in: path
          description: The Asset Administration Shell’s unique id (UTF8-BASE64-URL-encoded)
          required: true
          style: simple
          explode: false
          schema:
            type: string
        - name: submodelIdentifier
          in: path
          description: The Submodel’s unique id (UTF8-BASE64-URL-encoded)
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        '204':
          description: Submodel Descriptor deleted successfully
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'      
        default:
          description: Default error handling for unmentioned status codes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
  /submodel-descriptors:
    get:
      tags:
        - submodel_registry
        - submodel_registry_read
      summary: Returns all Submodel Descriptors
      operationId: GetAllSubmodelDescriptors
      x-semanticIds:
        - https://admin-shell.io/aas/API/GetAllSubmodelDescriptors/1/0/RC03
      responses:
        '200':
          description: Requested Submodel Descriptors
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SubmodelDescriptor'
        default:
          description: Default error handling for unmentioned status codes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
    post:
      tags:
        - submodel_registry
      summary: Creates a new Submodel Descriptor, i.e. registers a submodel
      operationId: PostSubmodelDescriptor
      x-semanticIds:
        - https://admin-shell.io/aas/API/PostSubmodelDescriptor/1/0/RC03
      requestBody:
        description: Submodel Descriptor object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubmodelDescriptor'
        required: true
      responses:
        '201':
          description: Submodel Descriptor created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubmodelDescriptor'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
        default:
          description: Default error handling for unmentioned status codes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
  /submodel-descriptors/{submodelIdentifier}:
    get:
      tags:
        - submodel_registry
        - submodel_registry_read
      summary: Returns a specific Submodel Descriptor
      operationId: GetSubmodelDescriptorById
      x-semanticIds:
        - https://admin-shell.io/aas/API/GetSubmodelDescriptorById/1/0/RC03
      parameters:
        - name: submodelIdentifier
          in: path
          description: The Submodel’s unique id (UTF8-BASE64-URL-encoded)
          required: true
          style: simple
          explode: false
          schema:
            type: string
            format: byte
      responses:
        '200':
          description: Requested Submodel Descriptor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubmodelDescriptor'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
        default:
          description: Default error handling for unmentioned status codes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
    put:
      tags:
        - submodel_registry
      summary: Updates an existing Submodel Descriptor
      operationId: PutSubmodelDescriptorById
      x-semanticIds:
        - https://admin-shell.io/aas/API/PutSubmodelDescriptorById/1/0/RC03
      parameters:
        - name: submodelIdentifier
          in: path
          description: The Submodel’s unique id (UTF8-BASE64-URL-encoded)
          required: true
          style: simple
          explode: false
          schema:
            type: string
            format: byte
      requestBody:
        description: Submodel Descriptor object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubmodelDescriptor'
        required: true
      responses:
        '204':
          description: Submodel Descriptor updated successfully
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'      
        default:
          description: Default error handling for unmentioned status codes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result' 
    delete:
      tags:
        - submodel_registry
      summary: Deletes a Submodel Descriptor, i.e. de-registers a submodel
      operationId: DeleteSubmodelDescriptorById
      x-semanticIds:
        - https://admin-shell.io/aas/API/DeleteSubmodelDescriptorById/1/0/RC03
      parameters:
        - name: submodelIdentifier
          in: path
          description: The Submodel’s unique id (UTF8-BASE64-URL-encoded)
          required: true
          style: simple
          explode: false
          schema:
            type: string
            format: byte
      responses:
        '204':
          description: Submodel Descriptor deleted successfully
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'      
        default:
          description: Default error handling for unmentioned status codes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
  /concept-descriptions:
    get:
      tags:
        - concept_description_repository
        - concept_description_repository_read
      summary: Returns all Concept Descriptions
      operationId: GetAllConceptDescriptions
      x-semanticIds:
        - https://admin-shell.io/aas/API/GetAllConceptDescriptions/1/0/RC03
        - https://admin-shell.io/aas/API/GetAllConceptDescriptionsByIdShort/1/0/RC03
        - https://admin-shell.io/aas/API/GetAllConceptDescriptionsByIsCaseOf/1/0/RC03
        - https://admin-shell.io/aas/API/GetAllConceptDescriptionsByDataSpecificationReference/1/0/RC03
      parameters:
        - name: idShort
          in: query
          description: The Concept Description’s IdShort
          required: false
          style: form
          explode: true
          schema:
            type: string
        - name: isCaseOf
          in: query
          description: IsCaseOf reference (UTF8-BASE64-URL-encoded)
          required: false
          style: form
          explode: true
          schema:
            type: string
            format: byte
        - name: dataSpecificationRef
          in: query
          description: DataSpecification reference (UTF8-BASE64-URL-encoded)
          required: false
          style: form
          explode: true
          schema:
            type: string
            format: byte
      responses:
        '200':
          description: Requested Concept Descriptions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/ConceptDescription'
        default:
          description: Default error handling for unmentioned status codes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
    post:
      tags:
        - concept_description_repository
      summary: Creates a new Concept Description
      operationId: PostConceptDescription
      x-semanticIds:
        - https://admin-shell.io/aas/API/PostConceptDescription/1/0/RC03
      requestBody:
        description: Concept Description object
        content:
          application/json:
            schema:
              $ref: '#/components/ConceptDescription'
        required: true
      responses:
        '201':
          description: Concept Description created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/ConceptDescription'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
        default:
          description: Default error handling for unmentioned status codes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
  /concept-descriptions/{cdIdentifier}:
    get:
      tags:
        - concept_description_repository
        - concept_description_repository_read
      summary: Returns a specific Concept Description
      operationId: GetConceptDescriptionById
      x-semanticIds:
        - https://admin-shell.io/aas/API/GetConceptDescriptionById/1/0/RC03
      parameters:
        - name: cdIdentifier
          in: path
          description: The Concept Description’s unique id (UTF8-BASE64-URL-encoded)
          required: true
          style: simple
          explode: true
          schema:
            type: string
            format: byte
      responses:
        '200':
          description: Requested Concept Description
          content:
            application/json:
              schema:
                $ref: '#/components/ConceptDescription'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
        default:
          description: Default error handling for unmentioned status codes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
    put:
      tags:
        - concept_description_repository
      summary: Updates an existing Concept Description
      operationId: PutConceptDescriptionById
      x-semanticIds:
        - https://admin-shell.io/aas/API/PutConceptDescriptionById/1/0/RC03
      parameters:
        - name: cdIdentifier
          in: path
          description: The Concept Description’s unique id (UTF8-BASE64-URL-encoded)
          required: true
          style: simple
          explode: false
          schema:
            type: string
            format: byte
      requestBody:
        description: Concept Description object
        content:
          application/json:
            schema:
              $ref: '#/components/ConceptDescription'
        required: true
      responses:
        '204':
          description: Concept Description updated successfully
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'      
        default:
          description: Default error handling for unmentioned status codes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result' 
    delete:
      tags:
        - concept_description_repository
      summary: Deletes a Concept Description
      operationId: DeleteConceptDescriptionById
      x-semanticIds:
        - https://admin-shell.io/aas/API/DeleteConceptDescriptionById/1/0/RC03
      parameters:
        - name: cdIdentifier
          in: path
          description: The Concept Description’s unique id (UTF8-BASE64-URL-encoded)
          required: true
          style: simple
          explode: false
          schema:
            type: string
            format: byte
      responses:
        '204':
          description: Concept Description deleted successfully
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'      
        default:
          description: Default error handling for unmentioned status codes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
  /packages:
    get:
      tags:
        - aasx_file_server
      summary: Returns a list of available AASX packages at the server
      operationId: GetAllAASXPackageIds
      x-semanticIds:
        - https://admin-shell.io/aas/API/GetAllAASXPackageIds/1/0/RC03
      parameters:
        - name: aasId
          in: query
          description: The Asset Administration Shell’s unique id (UTF8-BASE64-URL-encoded)
          required: false
          style: form
          explode: true
          schema:
            type: string
            format: byte
      responses:
        '200':
          description: Requested package list
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PackageDescription'
        default:
          description: Default error handling for unmentioned status codes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
    post:
      tags:
        - aasx_file_server
      summary: Stores the AASX package at the server
      operationId: PostAASXPackage
      x-semanticIds:
        - https://admin-shell.io/aas/API/PostAASXPackage/1/0/RC03
      requestBody:
        description: AASX package
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                aasIds:
                  type: array
                  items:
                    type: string
                file:
                  type: string
                  format: binary
                fileName:
                  type: string
            encoding:
              file:
                contentType: application/asset-administration-shell-package
        required: true
      responses:
        '201':
          description: AASX package stored successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PackageDescription'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
        default:
          description: Default error handling for unmentioned status codes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
  /packages/{packageId}:
    get:
      tags:
        - aasx_file_server
      summary: Returns a specific AASX package from the server
      operationId: GetAASXByPackageId
      x-semanticIds:
        - https://admin-shell.io/aas/API/GetAASXByPackageId/1/0/RC03
      parameters:
        - name: packageId
          in: path
          description: The package Id (UTF8-BASE64-URL-encoded)
          required: true
          style: simple
          explode: true
          schema:
            type: string
            format: byte
      responses:
        '200':
          description: Requested AASX package
          headers:
            X-FileName:
              schema:
                type: string
              description: Filename of the package
          content:
            application/asset-administration-shell-package:
              schema:
                type: string
                format: binary
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
        default:
          description: Default error handling for unmentioned status codes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
    put:
      tags:
        - aasx_file_server
      summary: Updates the AASX package at the server
      operationId: PutAASXByPackageId
      x-semanticIds:
        - https://admin-shell.io/aas/API/PutAASXByPackageId/1/0/RC03
      parameters:
        - name: packageId
          in: path
          description: The Package Id (UTF8-BASE64-URL-encoded)
          required: true
          style: simple
          explode: true
          schema:
            type: string
            format: byte
      requestBody:
        description: AASX package
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                aasIds:
                  type: array
                  items:
                    type: string
                file:
                  type: string
                  format: binary
                fileName:
                  type: string
            encoding:
              file:
                contentType: application/asset-administration-shell-package
        required: true
      responses:
        '204':
          description: AASX package updated successfully
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'      
        default:
          description: Default error handling for unmentioned status codes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result' 
    delete:
      tags:
        - aasx_file_server
      summary: Deletes a specific AASX package from the server
      operationId: DeleteAASXByPackageId
      x-semanticIds:
        - https://admin-shell.io/aas/API/DeleteAASXByPackageId/1/0/RC03
      parameters:
        - name: packageId
          in: path
          description: The Package Id (UTF8-BASE64-URL-encoded)
          required: true
          style: simple
          explode: true
          schema:
            type: string
            format: byte
      responses:
        '204':
          description: Deleted successfully
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'      
        default:
          description: Default error handling for unmentioned status codes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
  /serialization:
    get:
      tags:
        - serialization
      summary: Returns an appropriate serialization based on the specified format (see SerializationFormat)
      operationId: GenerateSerializationByIds
      x-semanticIds:
        - https://admin-shell.io/aas/API/GenerateSerializationByIds/1/0/RC03
      parameters:
        - name: aasIds
          in: query
          description: The Asset Administration Shells' unique ids (UTF8-BASE64-URL-encoded)
          required: true
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: submodelIds
          in: query
          description: The Submodels' unique ids (UTF8-BASE64-URL-encoded)
          required: true
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: includeConceptDescriptions
          in: query
          description: Include Concept Descriptions?
          required: true
          style: form
          explode: true
          schema:
            type: boolean
            default: true
      responses:
        '200':
          description: Requested serialization based on SerializationFormat
          content:
            application/asset-administration-shell-package+xml:
              schema:
                description: AASX package
                type: string
                format: binary
            application/json:
              schema:
                $ref: '#/components/Environment'
            application/xml:
              schema:
                $ref: '#/components/Environment'
        default:
          description: Default error handling for unmentioned status codes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
  /lookup/shells:
    get:
      tags:
        - discovery
      summary: Returns a list of Asset Administration Shell ids linked to specific Asset identifiers 
      operationId: GetAllAssetAdministrationShellIdsByAssetLink
      x-semanticIds:
        - https://admin-shell.io/aas/API/GetAllAssetAdministrationShellIdsByAssetLink/1/0/RC03
      parameters:
        - name: assetIds
          in: query
          description: A list of specific Asset identifiers
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              $ref: '#/components/SpecificAssetId'
            example: '[ { "name": "some-asset-id", "value": "http://example-company.com/myAsset", "externalSubjectId": { "keys": [ { "type": "GlobalReference", "value": "http://example-company.com/example-companys-asset-keys" } ], "type": "GlobalReference" } }, { "name": "some-other-asset-id", "value": "12345ABC", "externalSubjectId": { "keys": [ { "type": "GlobalReference", "value": "http://my-own-company.com/keys" } ], "type": "GlobalReference" } } ]e": "globalAssetId","value": "http://example.company/myAsset", "externalSubjectId": "http://example.company"},{"name": "myOwnInternalAssetId","value": "12345ABC", "externalSubjectId": "http://example.company"}]'
      responses:
        '200':
          description: Requested Asset Administration Shell ids
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        default:
          description: Default error handling for unmentioned status codes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
  /lookup/shells/{aasIdentifier}:
    get:
      tags:
        - discovery
      summary: Returns a list of specific Asset identifiers based on an Asset Administration Shell id to edit discoverable content
      operationId: GetAllAssetLinksById
      x-semanticIds:
        - https://admin-shell.io/aas/API/GetAllAssetLinksById/1/0/RC03
      parameters:
        - name: aasIdentifier
          in: path
          description: The Asset Administration Shell’s unique id (UTF8-BASE64-URL-encoded)
          required: true
          style: simple
          explode: false
          schema:
            type: string
            format: byte
      responses:
        '200':
          description: Requested specific Asset identifiers
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/SpecificAssetId'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
        default:
          description: Default error handling for unmentioned status codes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
    post:
      tags:
        - discovery
      summary: Creates specific Asset identifiers linked to an Asset Administration Shell to edit discoverable content
      operationId: PostAllAssetLinksById
      x-semanticIds:
        - https://admin-shell.io/aas/API/PostAllAssetLinksById/1/0/RC03
      parameters:
        - name: aasIdentifier
          in: path
          description: The Asset Administration Shell’s unique id (UTF8-BASE64-URL-encoded)
          required: true
          style: simple
          explode: false
          schema:
            type: string
            format: bytev
      requestBody:
        description: A list of specific Asset identifiers
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/SpecificAssetId'
        required: true
      responses:
        '201':
          description: Specific Asset identifiers created successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/SpecificAssetId'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
        default:
          description: Default error handling for unmentioned status codes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
    delete:
      tags:
        - discovery
      summary: Deletes all specific Asset identifiers linked to an Asset Administration Shell to edit discoverable content
      operationId: DeleteAllAssetLinksById
      x-semanticIds:
        - https://admin-shell.io/aas/API/DeleteAllAssetLinksById/1/0/RC03
      parameters:
        - name: aasIdentifier
          in: path
          description: The Asset Administration Shell’s unique id (UTF8-BASE64-URL-encoded)
          required: true
          style: simple
          explode: false
          schema:
            type: string
            format: byte
      responses:
        '204':
          description: Specific Asset identifiers deleted successfully
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'      
        default:
          description: Default error handling for unmentioned status codes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
  /descriptor:
    get:
      tags:
        - description
      summary: Returns the self-describing information of a network resource (Descriptor)
      operationId: GetDescriptor
      x-semanticIds:
        - https://admin-shell.io/aas/API/Descriptor/GetDescriptor/1/0/RC03
      responses:
        '200':
          description: Requested Descriptor
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Descriptor'
        default:
          description: Default error handling for unmentioned status codes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
components:
  parameters:
    Level:
      name: level
      in: query
      description: Determines the structural depth of the respective resource content
      required: false
      schema:
        type: string
        default: deep
        enum:
        - deep
        - core
    Content:
      name: content
      in: query
      description: Determines the request or response kind of the resource
      required: false
      schema:
        type: string
        default: normal
        enum:
        - normal
        - metadata
        - value
        - reference
        - path
    Extent:
      name: extent
      in: query
      description: Determines to which extent the resource is being serialized
      required: false
      schema:
        type: string
        enum:
        - withBlobValue
        - withoutBlobValue
    SemanticId:
      name: semanticId
      in: query
      description: The value of the semantic id reference (BASE64-URL-encoded)
      schema:
        type: string
  schemas:
    AnnotatedRelationshipElementMetadata:
      "$ref": "#/components/schemas/SubmodelElementAttributes"
    AnnotatedRelationshipElementValue:
      properties:
        first:
          "$ref": "#/components/schemas/ReferenceValue"
        second:
          "$ref": "#/components/schemas/ReferenceValue"
        annotation:
          type: array
          items:
            "$ref": "#/components/schemas/ValueOnly"
      required:
      - first
      - second
      type: object
    AssetAdministrationShellDescriptor:
      allOf:
      - "$ref": "#/components/schemas/Descriptor"
      - properties:
          administration:
            "$ref": '#/components/schemas/AdministrativeInformation'
          descriptions:
            type: array
            items:
              "$ref": '#/components/schemas/LangString'
          displayNames:
            type: array
            items:
              "$ref": '#/components/schemas/LangString'
          globalAssetId:
            "$ref": '#/components/schemas/Reference'
          idShort:
            type: string
          identification:
            type: string
          specificAssetIds:
            "$ref": '#/components/schemas/SpecificAssetId'
          submodelDescriptors:
            items:
              "$ref": "#/components/schemas/SubmodelDescriptor"
            type: array
      required:
      - identification
      - endpoints
      type: object
      example: '{ "identification": "https://example.org/aas/motor", "endpoints":
        [ { "protocolInformation": { "endpointAddress": "https://localhost:1234",
        "endpointProtocolVersion": "1.1" }, "interface": "AAS-1.0" }, { "protocolInformation":
        { "endpointAddress": "opc.tcp://localhost:4840" }, "interface": "AAS-1.0"
        }, { "protocolInformation": { "endpointAddress": "https://localhost:5678",
        "endpointProtocolVersion": "1.1", "subprotocol": "OPC UA Basic SOAP", "subprotocolBody":
        "ns=2;s=MyAAS", "subprotocolBodyEncoding": "application/soap+xml" }, "interface":
        "AAS-1.0" } ] }'
    AssetAdministrationShellMetadata:
      allOf:
      - "$ref": '#/components/schemas/Identifiable'
      - "$ref": '#/components/schemas/HasDataSpecification'
      - properties:
          derivedFrom:
            "$ref": '#/components/schemas/Reference'
    BasicEventElementMetadata:
      allOf:
      - "$ref": "#/components/schemas/SubmodelElementAttributes"
      - properties:
          direction:
            "$ref": '#/components/schemas/Direction'
          state:
            "$ref": '#/components/schemas/StateOfEvent'
          messageTopic:
            type: string
          messageBroker:
            "$ref": '#/components/schemas/Reference'
          lastUpdate:
            type: string
          minInterval:
            type: string
          maxInterval:
            type: string
    BasicEventElementValue:
      properties:
        observed:
          "$ref": "#/components/schemas/ReferenceValue"
      required:
      - observed
      type: object
    BlobMetadata:
      "$ref": "#/components/schemas/SubmodelElementAttributes"
    BlobValue:
      properties:
        contentType:
          type: string
        value:
          type: string
      required:
      - contentType
      - value
      type: object
    BooleanValue:
      type: boolean
    CapabilityMetadata:
      allOf:
      - "$ref": "#/components/schemas/SubmodelElementAttributes"
    Descriptor:
      example: '{ "endpoints": [ { "protocolInformation": { "endpointAddress": "https://localhost:1234",
        "endpointProtocolVersion": "1.1" }, "interface": "AAS-1.0" }, { "protocolInformation":
        { "endpointAddress": "opc.tcp://localhost:4840" }, "interface": "AAS-1.0"
        }, { "protocolInformation": { "endpointAddress": "https://localhost:5678",
        "endpointProtocolVersion": "1.1", "subprotocol": "OPC UA Basic SOAP", "subprotocolBody":
        "ns=2;s=MyAAS", "subprotocolBodyEncoding": "application/soap+xml" }, "interface":
        "AAS-1.0" } ] }'
      properties:
        endpoints:
          items:
            "$ref": "#/components/schemas/Endpoint"
          type: array
      type: object
    Endpoint:
      properties:
        interface:
          type: string
        protocolInformation:
          "$ref": "#/components/schemas/ProtocolInformation"
      required:
      - protocolInformation
      - interface
      type: object
    EntityMetadata:
      allOf:
      - "$ref": "#/components/schemas/SubmodelElementAttributes"
    EntityValue:
      properties:
        entityType:
          "$ref": '#/components/schemas/EntityType'
        globalAssetId:
          "$ref": "#/components/schemas/ReferenceValue"
        specificAssetIds:
          type: array
          items:
            "$ref": "#/components/schemas/SpecificAssetIdValue"
        statements:
          items:
            "$ref": "#/components/schemas/ValueOnly"
          type: array
      required:
      - statements
      - entityType
      type: object
    ExecutionState:
      enum:
      - Initiated
      - Running
      - Completed
      - Canceled
      - Failed
      - Timeout
      type: string
    FileValue:
      properties:
        contentType:
          type: string
        value:
          type: string
      required:
      - contentType
      - value
      type: object
    FileMetadata:
      allOf:
      - "$ref": "#/components/schemas/SubmodelElementAttributes"
    SpecificAssetIdValue:
      type: object
      description: Since patternProperties and propertyNames are not supported by
        OpenApi yet, the ValueOnly serialization for this elements works with the
        key-attribute as the JSON-property name and the value-attribute as the corresponding
        value.
    Message:
      properties:
        code:
          type: string
        messageType:
          enum:
          - Undefined
          - Info
          - Warning
          - Error
          - Exception
          type: string
        text:
          type: string
        timestamp:
          type: string
      type: object
    MultiLanguagePropertyMetadata:
      allOf:
      - "$ref": "#/components/schemas/SubmodelElementAttributes"
    MultiLanguagePropertyValue:
      type: object
      description: Since patternProperties and propertyNames are not supported by
        OpenApi yet, the ValueOnly serialization for this elements works with the
        key-attribute as the JSON-property name and the value-attribute as the corresponding
        value.
    NumberValue:
      type: number
    OperationHandle:
      properties:
        handleId:
          type: string
        requestId:
          type: string
      type: object
    OperationMetadata:
      allOf:
      - "$ref": "#/components/schemas/SubmodelElementAttributes"
    OperationRequest:
      properties:
        inoutputArguments:
          items:
            "$ref": '#/components/schemas/OperationVariable'
          type: array
        inputArguments:
          items:
            "$ref": '#/components/schemas/OperationVariable'
          type: array
        requestId:
          type: string
        timeout:
          type: integer
      type: object
    OperationRequestValueOnly:
      properties:
        inoutputArguments:
          "$ref": "#/components/schemas/ValueOnly"
        inputArguments:
          "$ref": "#/components/schemas/ValueOnly"
        requestId:
          type: string
        timeout:
          type: integer
      type: object
    OperationResult:
      properties:
        executionResult:
          "$ref": "#/components/schemas/Result"
        executionState:
          "$ref": "#/components/schemas/ExecutionState"
        inoutputArguments:
          items:
            "$ref": '#/components/schemas/OperationVariable'
          type: array
        outputArguments:
          items:
            "$ref": '#/components/schemas/OperationVariable'
          type: array
        requestId:
          type: string
      type: object
    OperationResultValueOnly:
      properties:
        executionResult:
          "$ref": "#/components/schemas/Result"
        executionState:
          "$ref": "#/components/schemas/ExecutionState"
        inoutputArguments:
          "$ref": "#/components/schemas/ValueOnly"
        outputArguments:
          "$ref": "#/components/schemas/ValueOnly"
        requestId:
          type: string
      type: object
    PackageDescription:
      properties:
        aasIds:
          items:
            type: string
          type: array
        packageId:
          type: string
      type: object
    PropertyMetadata:
      allOf:
      - "$ref": "#/components/schemas/SubmodelElementAttributes"
      properties:
        valueType:
          "$ref": '#/components/schemas/DataTypeDefXsd'
    PropertyValue:
      oneOf:
      - "$ref": "#/components/schemas/StringValue"
      - "$ref": "#/components/schemas/NumberValue"
      - "$ref": "#/components/schemas/BooleanValue"
    ProtocolInformation:
      properties:
        endpointAddress:
          type: string
        endpointProtocol:
          type: string
        endpointProtocolVersion:
          type: string
        subprotocol:
          type: string
        subprotocolBody:
          type: string
        subprotocolBodyEncoding:
          type: string
      required:
      - endpointAddress
      type: object
    RangeMetadata:
      allOf:
      - "$ref": "#/components/schemas/SubmodelElementAttributes"
      properties:
        valueType:
          "$ref": '#/components/schemas/DataTypeDefXsd'
    RangeValue:
      properties:
        max:
          type: number
        min:
          type: number
      required:
      - min
      - max
      type: object
    ReferenceElementMetadata:
      allOf:
      - "$ref": "#/components/schemas/SubmodelElementAttributes"
    ReferenceElementValue:
      "$ref": "#/components/schemas/ReferenceValue"
    ReferenceValue:
      type: object
      properties:
        type:
          "$ref": '#/components/schemas/ReferenceTypes'
        keys:
          type: array
          items:
            "$ref": '#/components/schemas/Key'
    RelationshipElementMetadata:
      allOf:
      - "$ref": "#/components/schemas/SubmodelElementAttributes"
    RelationshipElementValue:
      properties:
        first:
          "$ref": "#/components/schemas/ReferenceValue"
        second:
          "$ref": "#/components/schemas/ReferenceValue"
      required:
      - first
      - second
      type: object
    Result:
      properties:
        messages:
          items:
            "$ref": "#/components/schemas/Message"
          type: array
        success:
          type: boolean
      type: object
    StringValue:
      type: string
    SubmodelDescriptor:
      allOf:
      - "$ref": "#/components/schemas/Descriptor"
      properties:
        administration:
          "$ref": '#/components/schemas/AdministrativeInformation'
        descriptions:
          type: array
          items:
            "$ref": '#/components/schemas/LangString'
        displayNames:
          type: array
          items:
            "$ref": '#/components/schemas/LangString'
        idShort:
          type: string
        identification:
          type: string
        semanticId:
          "$ref": '#/components/schemas/Reference'
      required:
      - identification
      - endpoints
      type: object
      example: '{ "identification": "https://admin-shell.io/zvei/nameplate/1/0/Nameplate",
        "endpoints": [ { "protocolInformation": { "endpointAddress": "https://localhost:1234",
        "endpointProtocolVersion": "1.1" }, "interface": "AAS-1.0" }, { "protocolInformation":
        { "endpointAddress": "opc.tcp://localhost:4840" }, "interface": "AAS-1.0"
        }, { "protocolInformation": { "endpointAddress": "https://localhost:5678",
        "endpointProtocolVersion": "1.1", "subprotocol": "OPC UA Basic SOAP", "subprotocolBody":
        "ns=2;s=MyAAS", "subprotocolBodyEncoding": "application/soap+xml" }, "interface":
        "AAS-1.0" } ] }'
    SubmodelElementAttributes:
      allOf:
      - "$ref": '#/components/schemas/Referable'
      - "$ref": '#/components/schemas/HasDataSpecification'
      - "$ref": '#/components/schemas/HasSemantics'
      - "$ref": '#/components/schemas/Qualifiable'
      - "$ref": '#/components/schemas/HasKind'
    SubmodelElementListMetadata:
      allOf:
      - "$ref": "#/components/schemas/SubmodelElementAttributes"
      properties:
        orderRelevant:
          type: boolean
        semanticIdListElement:
          "$ref": '#/components/schemas/Reference'
        typeValueListElement:
          "$ref": '#/components/schemas/ModelType'
        valueTypeListElement:
          "$ref": '#/components/schemas/DataTypeDefXsd'
    SubmodelElementListValue:
      type: array
      items:
        "$ref": "#/components/schemas/SubmodelElementValue"
    SubmodelElementCollectionMetadata:
      allOf:
      - "$ref": "#/components/schemas/SubmodelElementAttributes"
    SubmodelElementCollectionValue:
      type: object
      description: Since patternProperties and propertyNames are not supported by
        OpenApi yet, the ValueOnly serialization for this elements works with the
        key-attribute as the JSON-property name and the value-attribute as the corresponding
        value.
    SubmodelElementMetadata:
      allOf:
      - "$ref": "#/components/schemas/SubmodelElementAttributes"
      oneOf:
      - "$ref": "#/components/schemas/BlobMetadata"
      - "$ref": "#/components/schemas/FileMetadata"
      - "$ref": "#/components/schemas/CapabilityMetadata"
      - "$ref": "#/components/schemas/EntityMetadata"
      - "$ref": "#/components/schemas/BasicEventElementMetadata"
      - "$ref": "#/components/schemas/MultiLanguagePropertyMetadata"
      - "$ref": "#/components/schemas/OperationMetadata"
      - "$ref": "#/components/schemas/PropertyMetadata"
      - "$ref": "#/components/schemas/RangeMetadata"
      - "$ref": "#/components/schemas/ReferenceElementMetadata"
      - "$ref": "#/components/schemas/AnnotatedRelationshipElementMetadata"
      - "$ref": "#/components/schemas/RelationshipElementMetadata"
      - "$ref": "#/components/schemas/SubmodelElementListMetadata"
      - "$ref": "#/components/schemas/SubmodelElementCollectionMetadata"
    SubmodelElementValue:
      oneOf:
      - "$ref": "#/components/schemas/BasicEventElementValue"
      - "$ref": "#/components/schemas/PropertyValue"
      - "$ref": "#/components/schemas/MultiLanguagePropertyValue"
      - "$ref": "#/components/schemas/FileValue"
      - "$ref": "#/components/schemas/BlobValue"
      - "$ref": "#/components/schemas/RangeValue"
      - "$ref": "#/components/schemas/ReferenceElementValue"
      - "$ref": "#/components/schemas/RelationshipElementValue"
      - "$ref": "#/components/schemas/AnnotatedRelationshipElementValue"
      - "$ref": "#/components/schemas/EntityValue"
      - "$ref": "#/components/schemas/SubmodelElementCollectionValue"
      - "$ref": "#/components/schemas/SubmodelElementListValue"
    SubmodelMetadata:
      allOf:
      - "$ref": '#/components/schemas/Identifiable'
      - "$ref": '#/components/schemas/HasDataSpecification'
      - "$ref": '#/components/schemas/Qualifiable'
      - "$ref": '#/components/schemas/HasSemantics'
      - "$ref": '#/components/schemas/HasKind'
    ValueOnly:
      description: 'The ValueOnly serialization of submodel elements (patternProperties
        and propertyNames will be supported propably with OpenApi 3.1). The full description
        of the generic JSON validation schema for the ValueOnly-serialization can
        be found in chapter 9.4.3 in Details of the Asset Administration Shell Part
        2.'
      type: object
