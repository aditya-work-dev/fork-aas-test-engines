$schema: https://json-schema.org/draft/2020-12/schema
type: object
allOf:
- $ref: '#/$defs/Environment'
$defs:
  #### 5.3.11.1 Predefined Simple Data Types
  StringType:
    $ref: '#/$defs/Constraint_AASd-130'
  Constraint_AASd-130:
    pattern: ^[\x09\x0A\x0D\x20-\uD7FF\uE000-\uFFFD\u10000-\u10FFFF]*$
  Base64BinaryType:
    type: string
    contentEncoding: base64
  BooleanType:
    type: string
    enum:
    - "true"
    - "false"
    - "1"
    - "0"
  DateTimeType:
    type: string
    pattern: ^-?(([1-9][0-9][0-9][0-9]+)|(0[0-9][0-9][0-9]))-((0[1-9])|(1[0-2]))-((0[1-9])|([12][0-9])|(3[01]))T(((([01][0-9])|(2[0-3])):[0-5][0-9]:([0-5][0-9])(\.[0-9]+)?)|24:00:00(\.0+)?)(Z|\+00:00|-00:00)$
  DurationType:
    type: string
    pattern: ^-?P((([0-9]+Y([0-9]+M)?([0-9]+D)?|([0-9]+M)([0-9]+D)?|([0-9]+D))(T(([0-9]+H)([0-9]+M)?([0-9]+(\.[0-9]+)?S)?|([0-9]+M)([0-9]+(\.[0-9]+)?S)?|([0-9]+(\.[0-9]+)?S)))?)|(T(([0-9]+H)([0-9]+M)?([0-9]+(\.[0-9]+)?S)?|([0-9]+M)([0-9]+(\.[0-9]+)?S)?|([0-9]+(\.[0-9]+)?S))))$
  ### 5.3.11.2 Primitive Data Types
  BlobType:
    type: string
    contentEncoding: base64
  ContentType:
    type: string
    allOf:
    - minLength: 1
      maxLength: 100
    - pattern: "^([\\t\\n\\r -퟿-�]|\\ud800[\\udc00-\\udfff]|[\\ud801-\\udbfe][\\udc00-\\udfff]|\\udbff[\\udc00-\\udfff])*$"
    - pattern: "^([!#$%&'*+\\-.^_`|~0-9a-zA-Z])+/([!#$%&'*+\\-.^_`|~0-9a-zA-Z])+([
        \\t]*;[ \\t]*([!#$%&'*+\\-.^_`|~0-9a-zA-Z])+=(([!#$%&'*+\\-.^_`|~0-9a-zA-Z])+|\"(([\\t
        !#-\\[\\]-~]|[\x80-ÿ])|\\\\([\\t !-~]|[\x80-ÿ]))*\"))*$"
  Identifier:
    type: string
    minLength: 1
    maxLength: 2000
    pattern: "^([\\t\\n\\r -퟿-�]|\\ud800[\\udc00-\\udfff]|[\\ud801-\\udbfe][\\udc00-\\udfff]|\\udbff[\\udc00-\\udfff])*$"
  LabelType:
    type: string
    minLength: 1
    maxLength: 64
    pattern: "^([\\t\\n\\r -퟿-�]|\\ud800[\\udc00-\\udfff]|[\\ud801-\\udbfe][\\udc00-\\udfff]|\\udbff[\\udc00-\\udfff])*$"
  MessageTopicType:
    type: string
    minLength: 1
    maxLength: 255
    pattern: "^([\\t\\n\\r -퟿-�]|\\ud800[\\udc00-\\udfff]|[\\ud801-\\udbfe][\\udc00-\\udfff]|\\udbff[\\udc00-\\udfff])*$"
  NameType:
    type: string
    allOf:
    - minLength: 1
    - maxLength: 128
    - pattern: "^([\\t\\n\\r -퟿-�]|\\ud800[\\udc00-\\udfff]|[\\ud801-\\udbfe][\\udc00-\\udfff]|\\udbff[\\udc00-\\udfff])*$"
    - pattern: "^[a-zA-Z][a-zA-Z0-9_]*$"
  PathType:
    type: string
    allOf:
    - minLength: 1
      maxLength: 2000
    - pattern: "^([\\t\\n\\r -퟿-�]|\\ud800[\\udc00-\\udfff]|[\\ud801-\\udbfe][\\udc00-\\udfff]|\\udbff[\\udc00-\\udfff])*$"
    - pattern: "^file:(//((localhost|(\\[((([0-9A-Fa-f]{1,4}:){6}([0-9A-Fa-f]{1,4}:[0-9A-Fa-f]{1,4}|([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))|::([0-9A-Fa-f]{1,4}:){5}([0-9A-Fa-f]{1,4}:[0-9A-Fa-f]{1,4}|([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))|([0-9A-Fa-f]{1,4})?::([0-9A-Fa-f]{1,4}:){4}([0-9A-Fa-f]{1,4}:[0-9A-Fa-f]{1,4}|([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))|(([0-9A-Fa-f]{1,4}:)?[0-9A-Fa-f]{1,4})?::([0-9A-Fa-f]{1,4}:){3}([0-9A-Fa-f]{1,4}:[0-9A-Fa-f]{1,4}|([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))|(([0-9A-Fa-f]{1,4}:){2}[0-9A-Fa-f]{1,4})?::([0-9A-Fa-f]{1,4}:){2}([0-9A-Fa-f]{1,4}:[0-9A-Fa-f]{1,4}|([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))|(([0-9A-Fa-f]{1,4}:){3}[0-9A-Fa-f]{1,4})?::[0-9A-Fa-f]{1,4}:([0-9A-Fa-f]{1,4}:[0-9A-Fa-f]{1,4}|([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))|(([0-9A-Fa-f]{1,4}:){4}[0-9A-Fa-f]{1,4})?::([0-9A-Fa-f]{1,4}:[0-9A-Fa-f]{1,4}|([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))|(([0-9A-Fa-f]{1,4}:){5}[0-9A-Fa-f]{1,4})?::[0-9A-Fa-f]{1,4}|(([0-9A-Fa-f]{1,4}:){6}[0-9A-Fa-f]{1,4})?::)|[vV][0-9A-Fa-f]+\\.([a-zA-Z0-9\\-._~]|[!$&'()*+,;=]|:)+)\\]|([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])|([a-zA-Z0-9\\-._~]|%[0-9A-Fa-f][0-9A-Fa-f]|[!$&'()*+,;=])*)))?/((([a-zA-Z0-9\\-._~]|%[0-9A-Fa-f][0-9A-Fa-f]|[!$&'()*+,;=]|[:@]))+(/(([a-zA-Z0-9\\-._~]|%[0-9A-Fa-f][0-9A-Fa-f]|[!$&'()*+,;=]|[:@]))*)*)?|/((([a-zA-Z0-9\\-._~]|%[0-9A-Fa-f][0-9A-Fa-f]|[!$&'()*+,;=]|[:@]))+(/(([a-zA-Z0-9\\-._~]|%[0-9A-Fa-f][0-9A-Fa-f]|[!$&'()*+,;=]|[:@]))*)*)?)$"
  RevisionType:
    type: string
    allOf:
    - minLength: 1
      maxLength: 4
    - pattern: "^([\\t\\n\\r -퟿-�]|\\ud800[\\udc00-\\udfff]|[\\ud801-\\udbfe][\\udc00-\\udfff]|\\udbff[\\udc00-\\udfff])*$"
    - pattern: "^(0|[1-9][0-9]*)$"
  QualifierType:
    $ref: "#/$defs/NameType"
  VersionType:
    type: string
    allOf:
    - minLength: 1
      maxLength: 4
    - pattern: "^([\\t\\n\\r -퟿-�]|\\ud800[\\udc00-\\udfff]|[\\ud801-\\udbfe][\\udc00-\\udfff]|\\udbff[\\udc00-\\udfff])*$"
    - pattern: "^(0|[1-9][0-9]*)$"

  ### 5.3.11.3 Enumeration for Submodel Element Value Types
  DataTypeDefXsd:
    type: string
    enum:
    - xs:anyURI
    - xs:base64Binary
    - xs:boolean
    - xs:byte
    - xs:date
    - xs:dateTime
    - xs:decimal
    - xs:double
    - xs:duration
    - xs:float
    - xs:gDay
    - xs:gMonth
    - xs:gMonthDay
    - xs:gYear
    - xs:gYearMonth
    - xs:hexBinary
    - xs:int
    - xs:integer
    - xs:long
    - xs:negativeInteger
    - xs:nonNegativeInteger
    - xs:nonPositiveInteger
    - xs:positiveInteger
    - xs:short
    - xs:string
    - xs:time
    - xs:unsignedByte
    - xs:unsignedInt
    - xs:unsignedLong
    - xs:unsignedShort
  ValueWithType:
    anyOf:
    - patternProperties:
        ^valueType$:
          const: xs:string
        ^(value|min|max)$:
          $ref: "#/$defs/StringType"
    - patternProperties:
        ^valueType$:
          const: xs:boolean
        ^(value|min|max)$:
          $ref: "#/$defs/BooleanType"
    - patternProperties:
        ^valueType$:
          const: xs:decimal
        ^(value|min|max)$:
          type: string
          pattern: ^\d*\.?\d*$
          minLength: 1
    - patternProperties:
        ^valueType$:
          const: xs:integer
        ^(value|min|max)$:
          type: string
          pattern: ^[+-]?\d+$

    - patternProperties:
        ^valueType$:
          const: xs:float
        ^(value|min|max)$:
          pattern: ^[-+]?(([0-9]*[.]?[0-9]+([ed][-+]?[0-9]+)?)|(INF)|(NaN))$
    - patternProperties:
        ^valueType$:
          const: xs:double
        ^(value|min|max)$:
          type: string
          pattern: ^[-+]?(([0-9]*[.]?[0-9]+([ed][-+]?[0-9]+)?)|(INF)|(NaN))$

    - patternProperties:
        ^valueType$:
          const: xs:date
        ^(value|min|max)$:
          type: string
          pattern: ^\d\d\d\d-\d\d-\d\d(Z|\+\d\d:\d\d)?$
    - patternProperties:
        ^valueType$:
          const: xs:dateTime
        ^(value|min|max)$:
          type: string
          $ref: "#/$defs/DateTimeType"
    - patternProperties:
        ^valueType$:
          const: xs:time
        ^(value|min|max)$:
          type: string
          pattern: ^\d\d:\d\d:\d\d((\.\d+Z)|(\+\d\ð:\d\d))?$
    - patternProperties:
        ^valueType$:
          const: xs:duration
        ^(value|min|max)$:
          type: string
          $ref: "#/$defs/DurationType"
    - patternProperties:
        ^valueType$:
          const: xs:gDay
        ^(value|min|max)$:
          type: string
          pattern: ^---\d\d(\+\d\d:\d\ð)?$
    - patternProperties:
        ^valueType$:
          const: xs:gMonth
        ^(value|min|max)$:
          type: string
          pattern: ^--\d\d\+(\d\d:\d\d)?$
    - patternProperties:
        ^valueType$:
          const: xs:gMonthDay
        ^(value|min|max)$:
          type: string
          pattern: ^--\d\d-\d\d(\+\d\ð:\d\d)?$
    - patternProperties:
        ^valueType$:
          const: xs:gYear
        ^(value|min|max)$:
          type: string
          pattern: ^\d\d\d\d(\+\d\ð:\d\d)?$
    - patternProperties:
        ^valueType$:
          const: xs:gYearMonth
        ^(value|min|max)$:
          type: string
          pattern: ^\d\d\d\d-\d\d(\+\d\d:\d\d)?$

    - patternProperties:
        ^valueType$:
          const: xs:byte
        ^(value|min|max)$:
          type: string
          pattern: ^[+-]?\d+$
    - patternProperties:
        ^valueType$:
          const: xs:int
        ^(value|min|max)$:
          type: string
          pattern: ^[+-]?\d+$
    - patternProperties:
        ^valueType$:
          const: xs:long
        ^(value|min|max)$:
          type: string
          pattern: ^[+-]?\d+$
    - patternProperties:
        ^valueType$:
          const: xs:negativeInteger
        ^(value|min|max)$:
          type: string
          pattern: ^-\d+$
    - patternProperties:
        ^valueType$:
          const: xs:nonNegativeInteger
        ^(value|min|max)$:
          type: string
          pattern: ^(\+?\d+)|(-0)$
    - patternProperties:
        ^valueType$:
          const: xs:nonPositiveInteger
        ^(value|min|max)$:
          type: string
          pattern: ^(-\d+)|(\+?0)$
    - patternProperties:
        ^valueType$:
          const: xs:positiveInteger
        ^(value|min|max)$:
          type: string
          pattern: ^(\+?(\d*|[1-9]))|0$
          minLength: 1
    - patternProperties:
        ^valueType$:
          const: xs:short
        ^(value|min|max)$:
          type: string
          pattern: ^[+-]?\d+$
    - patternProperties:
        ^valueType$:
          const: xs:unsignedByte
        ^(value|min|max)$:
          type: string
          pattern: ^[+]?\d+$
    - patternProperties:
        ^valueType$:
          const: xs:unsignedInt
        ^(value|min|max)$:
          type: string
          pattern: ^[+]?\d+$
    - patternProperties:
        ^valueType$:
          const: xs:unsignedLong
        ^(value|min|max)$:
          type: string
          pattern: ^[+]?\d+$
    - patternProperties:
        ^valueType$:
          const: xs:unsignedShort
        ^(value|min|max)$:
          type: string
          pattern: ^[+]?\d+$
  
    - patternProperties:
        ^valueType$:
          const: xs:base64Binary
        ^(value|min|max)$:
          type: string
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
    - patternProperties:
        ^valueType$:
          const: xs:hexBinary
        ^(value|min|max)$:
          type: string
          pattern: ^([0-9a-fA-F][0-9a-fA-F])*$
    - patternProperties:
        ^valueType$:
          const: xs:anyURI
        ^(value|min|max)$:
          type: string
          pattern: ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?$


  AasSubmodelElements:
    type: string
    enum:
    - AnnotatedRelationshipElement
    - BasicEventElement
    - Blob
    - Capability
    - DataElement
    - Entity
    - EventElement
    - File
    - MultiLanguageProperty
    - Operation
    - Property
    - Range
    - ReferenceElement
    - RelationshipElement
    - SubmodelElement
    - SubmodelElementCollection
    - SubmodelElementList
  AbstractLangString:
    type: object
    properties:
      language:
        type: string
        pattern: "^(([a-zA-Z]{2,3}(-[a-zA-Z]{3}(-[a-zA-Z]{3}){2})?|[a-zA-Z]{4}|[a-zA-Z]{5,8})(-[a-zA-Z]{4})?(-([a-zA-Z]{2}|[0-9]{3}))?(-(([a-zA-Z0-9]){5,8}|[0-9]([a-zA-Z0-9]){3}))*(-[0-9A-WY-Za-wy-z](-([a-zA-Z0-9]){2,8})+)*(-[xX](-([a-zA-Z0-9]){1,8})+)?|[xX](-([a-zA-Z0-9]){1,8})+|((en-GB-oed|i-ami|i-bnn|i-default|i-enochian|i-hak|i-klingon|i-lux|i-mingo|i-navajo|i-pwn|i-tao|i-tay|i-tsu|sgn-BE-FR|sgn-BE-NL|sgn-CH-DE)|(art-lojban|cel-gaulish|no-bok|no-nyn|zh-guoyu|zh-hakka|zh-min|zh-min-nan|zh-xiang)))$"
      text:
        type: string
        minLength: 1
        pattern: "^([\\t\\n\\r -퟿-�]|\\ud800[\\udc00-\\udfff]|[\\ud801-\\udbfe][\\udc00-\\udfff]|\\udbff[\\udc00-\\udfff])*$"
    required:
    - language
    - text
  Constraint_AASd-005:
    dependentRequired:
      revision: ["version"]
      version: ["revision"]
  AdministrativeInformation:
    allOf:
    - $ref: "#/$defs/HasDataSpecification"
    - $ref: "#/$defs/Constraint_AASd-005"
    - properties:
        version:
          $ref: "#/$defs/VersionType"
        revision:
          $ref: "#/$defs/RevisionType"
        creator:
          $ref: "#/$defs/Reference"
        templateId:
          $ref: "#/$defs/Identifier"
  AnnotatedRelationshipElement:
    allOf:
    - $ref: "#/$defs/RelationshipElementBase"
    - properties:
        annotations:
          type: array
          items:
            allOf:
            - $ref: "#/$defs/DataElement_choice"
            - $ref: "#/$defs/Constraint_AASd-117"
          minItems: 1
        modelType:
          const: AnnotatedRelationshipElement
  AssetAdministrationShell:
    allOf:
    - $ref: "#/$defs/Identifiable"
    - $ref: "#/$defs/HasDataSpecification"
    - properties:
        derivedFrom:
          $ref: "#/$defs/Reference"
        assetInformation:
          $ref: "#/$defs/AssetInformation"
        submodels:
          type: array
          items:
            $ref: "#/$defs/Reference"
          minItems: 1
        modelType:
          const: AssetAdministrationShell
      required:
      - assetInformation
  Constraint_AASd-131:
    oneOf:
    - allOf:
      - required:
          - specificAssetIds
      - not:
          required:
            - globalAssetId
    - allOf:
      - required:
          - globalAssetId
      - not:
          required:
            - specificAssetIds
  Constraint_AASd-116:
    oneOf:
    - not:
        properties:
          name:
            const: globalAssetId
        required:
        - name
    - properties:
        name:
          const: globalAssetId
  AssetInformation:
    allOf:
    - $ref: "#/$defs/Constraint_AASd-131"
    - type: object
      properties:
        assetKind:
          $ref: "#/$defs/AssetKind"
        globalAssetId:
          $ref: "#/$defs/Identifier"
        specificAssetIds:
          type: array
          items:
            allOf:
            - $ref: "#/$defs/Constraint_AASd-116"
            - $ref: "#/$defs/SpecificAssetId"
          minItems: 1
        assetType:
          $ref: "#/$defs/Identifier"
        defaultThumbnail:
          $ref: "#/$defs/Resource"
      required:
      - assetKind
  AssetKind:
    type: string
    enum:
    - Instance
    - NotApplicable
    - Type
  BasicEventElement:
    allOf:
    - $ref: "#/$defs/EventElement"
    - properties:
        observed:
          $ref: "#/$defs/Reference"
        direction:
          $ref: "#/$defs/Direction"
        state:
          $ref: "#/$defs/StateOfEvent"
        messageTopic:
          $ref: "#/$defs/MessageTopicType"
        messageBroker:
          $ref: "#/$defs/Reference"
        lastUpdate:
          $ref: "#/$defs/DateTimeType"
        minInterval:
          $ref: "#/$defs/DurationType"
        maxInterval:
          $ref: "#/$defs/DurationType"
        modelType:
          const: BasicEventElement
      required:
      - observed
      - direction
      - state
  Blob:
    allOf:
    - $ref: "#/$defs/DataElement"
    - properties:
        value:
          $ref: "#/$defs/BlobType"
        contentType:
          $ref: "#/$defs/ContentType"
        modelType:
          const: Blob
      required:
      - contentType
  Capability:
    allOf:
    - $ref: "#/$defs/SubmodelElement"
    - properties:
        modelType:
          const: Capability
  ConceptDescription:
    allOf:
    - $ref: "#/$defs/Identifiable"
    - $ref: "#/$defs/HasDataSpecification"
    - properties:
        isCaseOf:
          type: array
          items:
            $ref: "#/$defs/Reference"
          minItems: 1
        modelType:
          const: ConceptDescription
  Constraint_AASd-090:
    properties:
      category:
        type: string
        enum:
        - CONSTANT
        - PARAMETER
        - VARIABLE
  DataElement:
    allOf:
    - $ref: "#/$defs/SubmodelElement"
    - $ref: "#/$defs/Constraint_AASd-090"
  DataElement_choice:
    anyOf:
    - $ref: "#/$defs/Blob"
    - $ref: "#/$defs/File"
    - $ref: "#/$defs/MultiLanguageProperty"
    - $ref: "#/$defs/Property"
    - $ref: "#/$defs/Range"
    - $ref: "#/$defs/ReferenceElement"
  DataSpecificationContent:
    type: object
    properties:
      modelType:
        $ref: "#/$defs/ModelType"
    required:
    - modelType
  DataSpecificationContent_choice:
    anyOf:
    - $ref: "#/$defs/DataSpecificationIec61360"
  DataSpecificationIec61360:
    allOf:
    - $ref: "#/$defs/DataSpecificationContent"
    - properties:
        preferredName:
          type: array
          items:
            $ref: "#/$defs/LangStringPreferredNameTypeIec61360"
          minItems: 1
        shortName:
          type: array
          items:
            $ref: "#/$defs/LangStringShortNameTypeIec61360"
          minItems: 1
        unit:
          type: string
          minLength: 1
          pattern: "^([\\t\\n\\r -퟿-�]|\\ud800[\\udc00-\\udfff]|[\\ud801-\\udbfe][\\udc00-\\udfff]|\\udbff[\\udc00-\\udfff])*$"
        unitId:
          $ref: "#/$defs/Reference"
        sourceOfDefinition:
          type: string
          minLength: 1
          pattern: "^([\\t\\n\\r -퟿-�]|\\ud800[\\udc00-\\udfff]|[\\ud801-\\udbfe][\\udc00-\\udfff]|\\udbff[\\udc00-\\udfff])*$"
        symbol:
          type: string
          minLength: 1
          pattern: "^([\\t\\n\\r -퟿-�]|\\ud800[\\udc00-\\udfff]|[\\ud801-\\udbfe][\\udc00-\\udfff]|\\udbff[\\udc00-\\udfff])*$"
        dataType:
          $ref: "#/$defs/DataTypeIec61360"
        definition:
          type: array
          items:
            $ref: "#/$defs/LangStringDefinitionTypeIec61360"
          minItems: 1
        valueFormat:
          type: string
          minLength: 1
          pattern: "^([\\t\\n\\r -퟿-�]|\\ud800[\\udc00-\\udfff]|[\\ud801-\\udbfe][\\udc00-\\udfff]|\\udbff[\\udc00-\\udfff])*$"
        valueList:
          $ref: "#/$defs/ValueList"
        value:
          type: string
          minLength: 1
          maxLength: 2000
          pattern: "^([\\t\\n\\r -퟿-�]|\\ud800[\\udc00-\\udfff]|[\\ud801-\\udbfe][\\udc00-\\udfff]|\\udbff[\\udc00-\\udfff])*$"
        levelType:
          $ref: "#/$defs/LevelType"
        modelType:
          const: DataSpecificationIec61360
      required:
      - preferredName
  DataTypeIec61360:
    type: string
    enum:
    - BLOB
    - BOOLEAN
    - DATE
    - FILE
    - HTML
    - INTEGER_COUNT
    - INTEGER_CURRENCY
    - INTEGER_MEASURE
    - IRDI
    - IRI
    - RATIONAL
    - RATIONAL_MEASURE
    - REAL_COUNT
    - REAL_CURRENCY
    - REAL_MEASURE
    - STRING
    - STRING_TRANSLATABLE
    - TIME
    - TIMESTAMP
  Direction:
    type: string
    enum:
    - input
    - output
  EmbeddedDataSpecification:
    type: object
    properties:
      dataSpecification:
        $ref: "#/$defs/Reference"
      dataSpecificationContent:
        $ref: "#/$defs/DataSpecificationContent_choice"
    required:
    - dataSpecification
    - dataSpecificationContent
  Constraint_AASd-014:
    if:
      properties:
        entityType:
          const: SelfManagedEntity
      required:
        - entityType
    then:
      oneOf:
      - allOf:
        - required:
          - globalAssetId
        - not:
            required:
            - specificAssetId
      - allOf:
        - required:
          - specificAssetId
        - not:
            required:
            - globalAssetId
    else:
      not:
        required:
        - globalAssetId
        - specificAssetId
  Entity:
    allOf:
    - $ref: "#/$defs/SubmodelElement"
    - $ref: "#/$defs/Constraint_AASd-014"
    - properties:
        statements:
          type: array
          items:
            allOf:
            - $ref: "#/$defs/SubmodelElement_choice"
            - $ref: "#/$defs/Constraint_AASd-117"
          minItems: 1
        entityType:
          $ref: "#/$defs/EntityType"
        globalAssetId:
          $ref: "#/$defs/Identifier"
        specificAssetIds:
          type: array
          items:
            $ref: "#/$defs/SpecificAssetId"
          minItems: 1
        modelType:
          const: Entity
      required:
      - entityType
  EntityType:
    type: string
    enum:
    - CoManagedEntity
    - SelfManagedEntity
  Environment:
    type: object
    properties:
      assetAdministrationShells:
        type: array
        items:
          $ref: "#/$defs/AssetAdministrationShell"
        minItems: 1
      submodels:
        type: array
        items:
          $ref: "#/$defs/Submodel"
        minItems: 1
      conceptDescriptions:
        type: array
        items:
          $ref: "#/$defs/ConceptDescription"
        minItems: 1
  EventElement:
    $ref: "#/$defs/SubmodelElement"
  Extension:
    allOf:
    - $ref: "#/$defs/HasSemantics"
    - $ref: "#/$defs/ValueWithType"
    - properties:
        name:
          $ref: "#/$defs/NameType"
        valueType:
          $ref: "#/$defs/DataTypeDefXsd"
        value:
          type: string
        refersTo:
          type: array
          items:
            $ref: "#/$defs/Reference"
          minItems: 1
      required:
      - name
  File:
    allOf:
    - $ref: "#/$defs/DataElement"
    - properties:
        value:
          $ref: "#/$defs/PathType"
        contentType:
          $ref: "#/$defs/ContentType"
        modelType:
          const: File
      required:
      - contentType
  HasDataSpecification:
    type: object
    properties:
      embeddedDataSpecifications:
        type: array
        items:
          $ref: "#/$defs/EmbeddedDataSpecification"
        minItems: 1
  HasExtensions:
    type: object
    properties:
      extensions:
        type: array
        items:
          $ref: "#/$defs/Extension"
        minItems: 1
  HasKind:
    type: object
    properties:
      kind:
        $ref: "#/$defs/ModellingKind"
  Constraint_AASd-118:
    dependentRequired:
      supplementalSemanticIds: ["semanticId"]
  HasSemantics:
    allOf:
    - $ref: "#/$defs/Constraint_AASd-118"
    - type: object
      properties:
        semanticId:
          $ref: "#/$defs/Reference"
        supplementalSemanticIds:
          type: array
          items:
            $ref: "#/$defs/Reference"
          minItems: 1
  Identifiable:
    allOf:
    - $ref: "#/$defs/Referable"
    - properties:
        administration:
          $ref: "#/$defs/AdministrativeInformation"
        id:
          $ref: "#/$defs/Identifier"
      required:
      - id
  Key:
    type: object
    properties:
      type:
        $ref: "#/$defs/KeyTypes"
      value:
        type: string
        minLength: 1
        maxLength: 2000
        pattern: "^([\\t\\n\\r -퟿-�]|\\ud800[\\udc00-\\udfff]|[\\ud801-\\udbfe][\\udc00-\\udfff]|\\udbff[\\udc00-\\udfff])*$"
    required:
    - type
    - value
  KeyTypes:
    type: string
    enum:
    - AnnotatedRelationshipElement
    - AssetAdministrationShell
    - BasicEventElement
    - Blob
    - Capability
    - ConceptDescription
    - DataElement
    - Entity
    - EventElement
    - File
    - FragmentReference
    - GlobalReference
    - Identifiable
    - MultiLanguageProperty
    - Operation
    - Property
    - Range
    - Referable
    - ReferenceElement
    - RelationshipElement
    - Submodel
    - SubmodelElement
    - SubmodelElementCollection
    - SubmodelElementList
  LangStringDefinitionTypeIec61360:
    allOf:
    - $ref: "#/$defs/AbstractLangString"
    - properties:
        text:
          type: string
          maxLength: 1023
  LangStringNameType:
    allOf:
    - $ref: "#/$defs/AbstractLangString"
    - properties:
        text:
          type: string
          maxLength: 128
  LangStringPreferredNameTypeIec61360:
    allOf:
    - $ref: "#/$defs/AbstractLangString"
    - properties:
        text:
          type: string
          maxLength: 255
  LangStringShortNameTypeIec61360:
    allOf:
    - $ref: "#/$defs/AbstractLangString"
    - properties:
        text:
          type: string
          maxLength: 18
  LangStringTextType:
    allOf:
    - $ref: "#/$defs/AbstractLangString"
    - properties:
        text:
          type: string
          maxLength: 1023
  LevelType:
    type: object
    properties:
      min:
        type: boolean
      nom:
        type: boolean
      typ:
        type: boolean
      max:
        type: boolean
    required:
    - min
    - nom
    - typ
    - max
  ModelType:
    type: string
    enum:
    - AnnotatedRelationshipElement
    - AssetAdministrationShell
    - BasicEventElement
    - Blob
    - Capability
    - ConceptDescription
    - DataSpecificationIec61360
    - Entity
    - File
    - MultiLanguageProperty
    - Operation
    - Property
    - Range
    - ReferenceElement
    - RelationshipElement
    - Submodel
    - SubmodelElementCollection
    - SubmodelElementList
  ModellingKind:
    type: string
    enum:
    - Instance
    - Template
  MultiLanguageProperty:
    allOf:
    - $ref: "#/$defs/DataElement"
    - properties:
        value:
          type: array
          items:
            $ref: "#/$defs/LangStringTextType"
          minItems: 1
        valueId:
          $ref: "#/$defs/Reference"
        modelType:
          const: MultiLanguageProperty
  Operation:
    allOf:
    - $ref: "#/$defs/SubmodelElement"
    - properties:
        inputVariables:
          type: array
          items:
            $ref: "#/$defs/OperationVariable"
          minItems: 1
        outputVariables:
          type: array
          items:
            $ref: "#/$defs/OperationVariable"
          minItems: 1
        inoutputVariables:
          type: array
          items:
            $ref: "#/$defs/OperationVariable"
          minItems: 1
        modelType:
          const: Operation
  OperationVariable:
    type: object
    properties:
      value:
        allOf:
        - $ref: "#/$defs/SubmodelElement_choice"
        - $ref: "#/$defs/Constraint_AASd-117"
    required:
    - value
  Property:
    allOf:
    - $ref: "#/$defs/DataElement"
    - $ref: "#/$defs/ValueWithType"
    - properties:
        valueType:
          $ref: "#/$defs/DataTypeDefXsd"
        value:
          type: string
        valueId:
          $ref: "#/$defs/Reference"
        modelType:
          const: Property
      required:
      - valueType
  Qualifiable:
    type: object
    properties:
      qualifiers:
        type: array
        items:
          $ref: "#/$defs/Qualifier"
        minItems: 1
      modelType:
        $ref: "#/$defs/ModelType"
    required:
    - modelType
  Qualifier:
    allOf:
    - $ref: "#/$defs/HasSemantics"
    - $ref: "#/$defs/ValueWithType"
    - properties:
        kind:
          $ref: "#/$defs/QualifierKind"
        type:
          $ref: "#/$defs/QualifierType"
        valueType:
          $ref: "#/$defs/DataTypeDefXsd"
        value:
          type: string
        valueId:
          $ref: "#/$defs/Reference"
      required:
      - type
      - valueType
  QualifierKind:
    type: string
    enum:
    - ConceptQualifier
    - TemplateQualifier
    - ValueQualifier
  Range:
    allOf:
    - $ref: "#/$defs/DataElement"
    - $ref: "#/$defs/ValueWithType"
    - properties:
        valueType:
          $ref: "#/$defs/DataTypeDefXsd"
        min:
          type: string
        max:
          type: string
        modelType:
          const: Range
      required:
      - valueType
  Constraint_AASd-002:
    $ref: '#/$defs/NameType'
  Referable:
    allOf:
    - $ref: "#/$defs/HasExtensions"
    - properties:
        category:
          deprecated: True
          $ref: '#/$defs/NameType'
        idShort:
          $ref: '#/$defs/Constraint_AASd-002'
        displayName:
          type: array
          items:
            $ref: "#/$defs/LangStringNameType"
          minItems: 1
        description:
          type: array
          items:
            $ref: "#/$defs/LangStringTextType"
          minItems: 1
        modelType:
          $ref: "#/$defs/ModelType"
      required:
      - modelType
  Reference:
    type: object
    properties:
      type:
        $ref: "#/$defs/ReferenceTypes"
      referredSemanticId:
        $ref: "#/$defs/Reference"
      keys:
        type: array
        items:
          $ref: "#/$defs/Key"
        minItems: 1
    required:
    - type
    - keys
  ReferenceElement:
    allOf:
    - $ref: "#/$defs/DataElement"
    - properties:
        value:
          $ref: "#/$defs/Reference"
        modelType:
          const: ReferenceElement
  ReferenceTypes:
    type: string
    enum:
    - ExternalReference
    - ModelReference
  # Need to introduce Base class here because of conflicting model type
  RelationshipElementBase:
    allOf:
    - $ref: "#/$defs/SubmodelElement"
    - properties:
        first:
          $ref: "#/$defs/Reference"
        second:
          $ref: "#/$defs/Reference"
      required:
      - first
      - second
  RelationshipElement:
    allOf:
    - $ref: "#/$defs/RelationshipElementBase"
    - properties:
        modelType:
          const: RelationshipElement

  RelationshipElement_choice:
    anyOf:
    - $ref: "#/$defs/RelationshipElement"
    - $ref: "#/$defs/AnnotatedRelationshipElement"
  Resource:
    type: object
    properties:
      path:
        $ref: "#/$defs/PathType"
      contentType:
        $ref: "#/$defs/ContentType"
    required:
    - path
  Constraint_AASd-133:
    properties:
      externalSubjectId:
        const: ExternalReference
  SpecificAssetId:
    allOf:
    - $ref: "#/$defs/HasSemantics"
    - $ref: "#/$defs/Constraint_AASd-133"
    - properties:
        name:
          $ref: "#/$defs/LabelType"
        value:
          $ref: "#/$defs/Identifier"
        externalSubjectId:
          $ref: "#/$defs/Reference"
      required:
      - name
      - value
  StateOfEvent:
    type: string
    enum:
    - 'off'
    - 'on'
  Submodel:
    allOf:
    - $ref: "#/$defs/Identifiable"
    - $ref: "#/$defs/HasKind"
    - $ref: "#/$defs/HasSemantics"
    - $ref: "#/$defs/Qualifiable"
    - $ref: "#/$defs/HasDataSpecification"
    - properties:
        submodelElements:
          type: array
          items:
            allOf:
            - $ref: "#/$defs/SubmodelElement_choice"
            - $ref: "#/$defs/Constraint_AASd-117"
          minItems: 1
        modelType:
          const: Submodel
  SubmodelElement:
    allOf:
    - $ref: "#/$defs/Referable"
    - $ref: "#/$defs/HasSemantics"
    - $ref: "#/$defs/Qualifiable"
    - $ref: "#/$defs/HasDataSpecification"
  Constraint_AASd-117:
    required:
    - idShort
  SubmodelElementCollection:
    allOf:
    - $ref: "#/$defs/SubmodelElement"
    - properties:
        value:
          type: array
          items:
            allOf:
            - $ref: "#/$defs/SubmodelElement_choice"
            - $ref: "#/$defs/Constraint_AASd-117"
          minItems: 1
        modelType:
          const: SubmodelElementCollection
  Constraint_AASd-120:
    not:
      required:
        - idShort
  SubmodelElementList:
    allOf:
    - $ref: "#/$defs/SubmodelElement"
    - properties:
        orderRelevant:
          type: boolean
        semanticIdListElement:
          $ref: "#/$defs/Reference"
        typeValueListElement:
          $ref: "#/$defs/AasSubmodelElements"
        valueTypeListElement:
          $ref: "#/$defs/DataTypeDefXsd"
        value:
          type: array
          items:
            allOf:
            - $ref: "#/$defs/SubmodelElement_choice"
            - $ref: "#/$defs/Constraint_AASd-120"
          minItems: 1
        modelType:
          const: SubmodelElementList
      required:
      - typeValueListElement
  SubmodelElement_choice:
    anyOf:
    - $ref: "#/$defs/DataElement_choice"
    - $ref: "#/$defs/RelationshipElement_choice"
    - $ref: "#/$defs/BasicEventElement"
    - $ref: "#/$defs/Capability"
    - $ref: "#/$defs/Entity"
    - $ref: "#/$defs/Operation"
    - $ref: "#/$defs/Property"
    - $ref: "#/$defs/SubmodelElementCollection"
    - $ref: "#/$defs/SubmodelElementList"
  ValueList:
    type: object
    properties:
      valueReferencePairs:
        type: array
        items:
          $ref: "#/$defs/ValueReferencePair"
        minItems: 1
    required:
    - valueReferencePairs
  ValueReferencePair:
    type: object
    properties:
      value:
        type: string
        minLength: 1
        maxLength: 2000
        pattern: "^([\\t\\n\\r -퟿-�]|\\ud800[\\udc00-\\udfff]|[\\ud801-\\udbfe][\\udc00-\\udfff]|\\udbff[\\udc00-\\udfff])*$"
      valueId:
        $ref: "#/$defs/Reference"
    required:
    - value
    - valueId
